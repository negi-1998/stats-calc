//---------------------------------------------------------------------------

#include <fmx.h>
#pragma hdrstop
 #include <unordered_map>
#include "modeForm.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.fmx"
TmymodeForm *mymodeForm;
//---------------------------------------------------------------------------
__fastcall TmymodeForm::TmymodeForm(TComponent* Owner)
	: TForm(Owner)
{

}
//---------------------------------------------------------------------------
std::unordered_map<float, int> ungroupedData;
void __fastcall TmymodeForm::ungroupedOkButtonClick(TObject *Sender)
{
    String AnsiData = ungroupedDataEdit->Text;
	float floatData = StrToFloat(AnsiData);
	if(ungroupedData.find(floatData)==ungroupedData.end()){
		ungroupedData.insert({floatData, 1});
	}
	else{
        ungroupedData[floatData]++;
	}
    ungroupedDataEdit->Text = "";
}
//---------------------------------------------------------------------------

void __fastcall TmymodeForm::ungroupedCalcButtonClick(TObject *Sender)
{
	int temp=0;
	float result;

	for(auto itr = ungroupedData.begin(); itr!=ungroupedData.end(); ++itr){
		if(itr->second > temp){
			result = itr->first;
			temp = itr->second;
		}
	}
	String formattedUngroupedOp = FormatFloat("0.000", result);
	ungroupedOpEdit->Text =   formattedUngroupedOp;
	ungroupedData.clear();
}
//---------------------------------------------------------------------------

